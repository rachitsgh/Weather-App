module.exports  =  System;

function System(builder){
	var b = this._builder = Object.create(builder);
	this._eventBus = builder.eventBus;
	this._commandBus = builder.commandBus;
}

System.prototype = {
	_on:function(){
		var isOn = [].shift.apply(arguments);
		var cb = [].pop.apply(arguments);
		function cb_(){
			cb.apply(null,arguments);
		}
		[].push.call(arguments,cb_);
		if(isOn){
			this._eventBus.on.apply(this._eventBus,arguments);
		}else{
			this._eventBus.once.apply(this._eventBus,arguments);
		}
	},
	once:function(){
		[].unshift.call(arguments,false)
		this._on.apply(this,arguments);
	},
	on:function(){
		[].unshift.call(arguments,true)
		this._on.apply(this,arguments);		
    },
	exec:function(commandName,args){
		this._commandBus.exec(comandName,args);
	}
}